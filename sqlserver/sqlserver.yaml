name : sqlserver
parent: dbosoft/winsrv2022-standard/latest

drives:
  - name: install
    source: {{ sqlserver_iso }}
    size: 1
    type: dvd

variables:
  - name: username
    value: Admin
    required: true
  - name: password
    required: true
    secret: true

fodder:    
 - name: admin-windows
   type: cloud-config
   content: 
    users:
      - name: '{{ username }}'
        groups: [ "Administrators" ]
        passwd: '{{ password }}'

 # windsc will setup the DSC environment
 - source: gene:dbosoft/windsc:setup

 # this will prepare the SQLServer DSC configuration
 - name: prepare-sqlserver
   type: shellscript
   fileName: SQLInstallConfiguration.ps1
   content: |
    #ps1

    $config = @"
    Configuration SQLInstall
    {
        Import-DscResource -ModuleName PSDesiredStateConfiguration
        Import-DscResource -ModuleName SqlServerDsc

        node localhost
        {
              WindowsFeature 'NetFramework45'
              {
                  Name   = 'NET-Framework-45-Core'
                  Ensure = 'Present'
              }

              SqlSetup 'InstallDefaultInstance'
              {
                  InstanceName        = 'MSSQLSERVER'
                  Features            = 'SQLENGINE'
                  SourcePath          = 'd:'
                  SQLSysAdminAccounts = @('Administrators')
                  DependsOn           = '[WindowsFeature]NetFramework45'
              }
        }
    }
    "@
    Start-Transcript -Path c:\SQLInstall.log -Append
    $config | Out-File -FilePath c:\SQLInstallConfiguration.ps1 -Force

    Install-Module -Name SqlServerDsc -Force
    cd c:\
    . c:\SQLInstallConfiguration.ps1
    SQLInstall

# running the DSC configuration will install SQL Server
# after running the configuration, the script will check the status
# and write the result to c:\SQLInstallStatus.txt
 - name: install-sqlserver
   type: shellscript
   fileName: SQLInstall.ps1
   content: |
    #ps1
    Start-Transcript -Path c:\SQLInstall.log -Append

    cd c:\

    Start-DscConfiguration -Path c:\SQLInstall -Wait -Force -Verbose -ErrorAction Stop

    $status = Get-DscConfigurationStatus

    if($status.Status -eq "Success"){
        "installed" | Out-File c:\SQLInstallStatus.txt -Force

        if($status.RebootRequested){
            Write-Information "Rebooting"
            exit 1003
        }
    }else{
      "failed" | Out-File c:\SQLInstallStatus.txt -Force
    }
    
    exit 0
    

    
